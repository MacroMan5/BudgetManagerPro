name: Dependency Updates

on:
  schedule:
    - cron: '0 9 * * 1'  # Every Monday at 9 AM UTC
  workflow_dispatch:

jobs:
  update-python-dependencies:
    name: Update Python Dependencies
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install pip-tools
      run: |
        python -m pip install --upgrade pip
        pip install pip-tools

    - name: Update Python dependencies
      run: |
        cd src/backend
        
        # Backup current requirements
        cp requirements.txt requirements.txt.backup
        
        # Update dependencies
        pip-compile --upgrade requirements.in
        
        # Check if there are any changes
        if ! diff -q requirements.txt requirements.txt.backup > /dev/null; then
          echo "PYTHON_DEPS_UPDATED=true" >> $GITHUB_ENV
          echo "Python dependencies have been updated"
        else
          echo "PYTHON_DEPS_UPDATED=false" >> $GITHUB_ENV
          echo "No Python dependency updates available"
        fi

    - name: Run tests with updated dependencies
      if: env.PYTHON_DEPS_UPDATED == 'true'
      run: |
        cd src/backend
        pip install -r requirements.txt
        python -m pytest tests/ -v
      env:
        DATABASE_URL: sqlite:///./test.db
        SECRET_KEY: test-secret-key-for-ci

    - name: Create Pull Request for Python dependencies
      if: env.PYTHON_DEPS_UPDATED == 'true'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "chore: update Python dependencies"
        title: "ðŸ”„ Update Python Dependencies"
        body: |
          ## Python Dependencies Update
          
          This PR updates Python dependencies to their latest compatible versions.
          
          ### Changes
          - Updated `requirements.txt` with latest compatible versions
          - All tests are passing with the new dependencies
          
          ### Review Notes
          - Please review the updated dependencies for any breaking changes
          - Consider testing in a staging environment before merging
          
          ---
          *This PR was automatically generated by the dependency update workflow*
        branch: update/python-dependencies
        delete-branch: true

  update-node-dependencies:
    name: Update Node.js Dependencies
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Node.js 18
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Update Node.js dependencies
      run: |
        cd src/frontend
        
        # Backup current package files
        cp package.json package.json.backup
        cp package-lock.json package-lock.json.backup
        
        # Update dependencies
        npx npm-check-updates -u
        npm install
        
        # Check if there are any changes
        if ! diff -q package.json package.json.backup > /dev/null; then
          echo "NODE_DEPS_UPDATED=true" >> $GITHUB_ENV
          echo "Node.js dependencies have been updated"
        else
          echo "NODE_DEPS_UPDATED=false" >> $GITHUB_ENV
          echo "No Node.js dependency updates available"
        fi

    - name: Run tests with updated dependencies
      if: env.NODE_DEPS_UPDATED == 'true'
      run: |
        cd src/frontend
        npm run lint
        npm run type-check
        npm run test

    - name: Create Pull Request for Node.js dependencies
      if: env.NODE_DEPS_UPDATED == 'true'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "chore: update Node.js dependencies"
        title: "ðŸ”„ Update Node.js Dependencies"
        body: |
          ## Node.js Dependencies Update
          
          This PR updates Node.js dependencies to their latest compatible versions.
          
          ### Changes
          - Updated `package.json` with latest compatible versions
          - Updated `package-lock.json` with resolved dependencies
          - All tests are passing with the new dependencies
          
          ### Review Notes
          - Please review the updated dependencies for any breaking changes
          - Consider testing in a staging environment before merging
          
          ---
          *This PR was automatically generated by the dependency update workflow*
        branch: update/node-dependencies
        delete-branch: true

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Run Python security audit
      run: |
        cd src/backend
        python -m pip install --upgrade pip
        pip install safety bandit pip-audit
        pip install -r requirements.txt
        
        echo "::group::Safety vulnerability check"
        safety check --json --output safety-report.json || true
        safety check --short-report
        echo "::endgroup::"
        
        echo "::group::Pip-audit vulnerability check"
        pip-audit --format=json --output pip-audit-report.json || true
        pip-audit --desc
        echo "::endgroup::"
        
        echo "::group::Bandit security analysis"
        bandit -r app/ -f json -o bandit-report.json || true
        bandit -r app/ --severity-level medium
        echo "::endgroup::"

    - name: Set up Node.js 18
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Run Node.js security audit
      run: |
        cd src/frontend
        npm ci
        
        echo "::group::NPM audit"
        npm audit --json > npm-audit-report.json || true
        npm audit --audit-level=moderate
        echo "::endgroup::"

    - name: Upload security reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-reports
        path: |
          src/backend/safety-report.json
          src/backend/pip-audit-report.json
          src/backend/bandit-report.json
          src/frontend/npm-audit-report.json

    - name: Create security issue if vulnerabilities found
      if: failure()
      uses: actions/github-script@v6
      with:
        script: |
          const title = 'ðŸ”’ Security Vulnerabilities Detected';
          const body = `
          ## Security Audit Report
          
          Security vulnerabilities have been detected in the project dependencies.
          
          ### Action Required
          - Review the security reports in the workflow artifacts
          - Update vulnerable dependencies
          - Test the application after updates
          
          ### Reports Available
          - Python dependencies: Safety, Pip-audit, Bandit reports
          - Node.js dependencies: NPM audit report
          
          **Workflow Run:** ${context.payload.repository.html_url}/actions/runs/${context.runId}
          
          ---
          *This issue was automatically created by the security audit workflow*
          `;
          
          // Check if issue already exists
          const existingIssues = await github.rest.issues.listForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
            state: 'open',
            labels: 'security,automated'
          });
          
          const existingIssue = existingIssues.data.find(issue => 
            issue.title.includes('Security Vulnerabilities Detected')
          );
          
          if (!existingIssue) {
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['security', 'automated', 'high-priority']
            });
          }
